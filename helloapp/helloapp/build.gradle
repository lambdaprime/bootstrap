// include xfunction for updateVersion
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.github.lambdaprime:id.xfunction:14.0"
    }
}

plugins {
    id 'com.diffplug.spotless'
}

apply plugin : 'eclipse'

eclipse.classpath.file {
    // instruct eclipse plugin to put everything to module path
    whenMerged {
        entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
    }
}

dependencies {
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "io.github.lambdaprime:id.xfunction:20.0-SNAPSHOT"
}

configurations {
  customConfig.extendsFrom implementation
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { 
        attributes 'Implementation-Version': "${rootProject.version}",
        'Main-Class': 'id.bootstrap.helloapp.HelloApp'
    }
    from {
        configurations.customConfig.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task createRelease(type: Copy) {
    def out = 'release'
    from jar.archiveFile
    into out
}

task cleanRelease(type: Delete) {
    delete "$projectDir/release"
}

assemble.dependsOn createRelease
clean.dependsOn cleanRelease

// run spotless and format code before the build
classes.dependsOn spotlessApply
