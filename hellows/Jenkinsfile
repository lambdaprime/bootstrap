pipeline {
    agent any
    // should specify tool name as it is assigned in Jenkins tools
    tools {
          maven "Maven 3.8.3"
    }
    stages {
        stage('build') {
            steps {
                configFileProvider([configFile(fileId: 'mvn_settings.xml', variable: 'SETTINGS_FILE')]) {
                    withCredentials([usernamePassword(credentialsId: 'tools-tests', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {

                        sh 'mvn -gs ${SETTINGS_FILE} clean install -Pintegration-test'
                    }
                }
            }
        }
        stage("release") {
            steps {
                configFileProvider([configFile(fileId: 'mvn_settings.xml', variable: 'SETTINGS_FILE')]) {
                    sshagent(credentials: ['deploySshKey']) {
                        sh 'mvn -gs ${SETTINGS_FILE} release:prepare release:perform -B'
                    }
                }
            }
        }
        stage("deploy-docker-image") {
            steps {
                configFileProvider([configFile(fileId: 'mvn_settings.xml', variable: 'SETTINGS_FILE')]) {
                    withCredentials([usernamePassword(credentialsId: 'jenkins-deploy-token', usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASSWORD')]) {
                        sh 'mvn -gs ${SETTINGS_FILE} jib:build -Djib.to.auth.username=${REGISTRY_USER} -Djib.to.auth.password=${REGISTRY_PASSWORD} -Djib.disableUpdateChecks=true'
                    }
                }
            }
        }
        stage("deploy-to-k8s-cluster") {
            steps {
                withKubeConfig([credentialsId: 'k8s-cluster', serverUrl: 'https://k8ctl-01:4443']) {
                    sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
                    sh 'chmod u+x ./kubectl' 
                    sh './kubectl apply -f k8s'
                    sh './kubectl rollout restart deployment helloWs'
                }
            }
        }
    }
}
